---
# vbr_setup tasks file for veeam_setup
- name: Debug
  debug:
    msg: 
      - "Installation Source: '{{ vbr_source }}'"
      - "Local Service User: '{{ vbr_username }}'"
      - "License File Destination: '{{ vbr_destination }}{{ vbr_destination_license }}'"
      - "SQL Server Instance: '{{ sql_instance }}'"
- name: Pre - Create license and setup directory
  ansible.windows.win_file:
    path: "{{ vbr_destination }}"
    state: directory
  when: vbr_license | bool
- name: Pre - Copy license file
  ansible.windows.win_copy:
    src: "{{ vbr_source_license }}"
    dest: "{{ vbr_destination }}{{ vbr_destination_license }}"
  when: vbr_license | bool
- name: Pre - Install 2014 System CLR Types
  ansible.windows.win_package:
    path: "{{ vbr_source }}Redistr\\x64\\SQLSysClrTypes.msi"
    state: present
- name: Pre - Install 2014 Shared management objects
  ansible.windows.win_package:
    path: "{{ vbr_source }}Redistr\\x64\\SharedManagementObjects.msi"
    state: present
- name: Pre - Install 2015  Visual C++ Redistributable
  ansible.windows.win_package:
    path: "{{ vbr_source }}Redistr\\x64\\vc_redist.x64.exe"
    arguments:
    - /install
    - /passive
    - /norestart
  when: install_vc_redist | bool
- name: Pre - Install ReportViewer
  ansible.windows.win_package:
    path: "{{ one_source }}Redistr\\ReportViewer.msi"
    state: present
- name: Pre - Install ASP .NET Core
  ansible.windows.win_package:
    path: "{{ one_source }}Redistr\\x64\\aspnetcore-runtime-3.1.10-win-x64.exe"
    arguments:
    - /install
    - /quiet
    - /norestart
- name: Pre - Install .NET Core
  ansible.windows.win_package:
    path: "{{ one_source }}Redistr\\x64\\dotnet-runtime-3.1.10-win-x64.exe"
    arguments:
    - /install
    - /quiet
    - /norestart
- name: Pre - Create Local Service and RunAs User
  ansible.windows.win_user:
    name: "{{ vbr_username }}"
    password: "{{ vbr_userpassword }}"
    password_never_expires: yes
    state: present
    groups:
        - Administrators
- name: SQL - Create Local SQL User
  ansible.windows.win_user:
    name: "{{ sql_username }}"
    password: "{{ sql_userpassword }}"
    password_never_expires: yes
    state: present
    groups:
        - Users
- name: SQL - Install SQL Express 2016 SP2 
  ansible.windows.win_package:
    path: "{{ vbr_source }}Redistr\\x64\\SqlExpress\\2016SP2\\SQLEXPR_x64_ENU.exe"
    product_id: SQL 2016 Express
    arguments: 
    - '/q'
    - '/ACTION=Install'
    - '/IACCEPTSQLSERVERLICENSETERMS' 
    - '/FEATURES=SQL' 
    - '/INSTANCENAME=VEEAMSQL2016'
    - '/SQLSVCACCOUNT={{ sql_username }}'
    - '/SQLSVCPASSWORD={{ sql_userpassword }}'
    - '/SECURITYMODE=SQL'
    - '/SAPWD={{ sql_sapassword }}'
    - '/ADDCURRENTUSERASSQLADMIN'
    - '/UPDATEENABLED=0'
    - '/TCPENABLED=1'
    - '/NPENABLED=1'
  become: yes
  become_flags: logon_type=batch
  vars: 
    ansible_become_method: runas
    ansible_become_user: "{{ vbr_username }}"
    ansible_become_pass: "{{ vbr_userpassword }}"
  when: sql_setup | bool
- name: Install VBR Catalog
  ansible.windows.win_package:
    path: "{{ vbr_source }}Catalog\\VeeamBackupCatalog64.msi"
    state: present
    arguments:
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
  register: win_package_vbr_catalog
- name: Install VBR Server with license
  ansible.windows.win_package:
    path: "{{ vbr_source }}Backup\\Server.x64.msi"
    state: present
    arguments: "VBR_LICENSE_FILE={{ vbr_destination }}{{ vbr_destination_license }} VBR_SQLSERVER_AUTHENTICATION=1 VBR_SQLSERVER_SERVER={{ sql_instance }} VBR_SQLSERVER_USERNAME=sa VBR_SQLSERVER_PASSWORD={{ sql_sapassword }} ACCEPT_THIRDPARTY_LICENSES=1 ACCEPTEULA=YES"
  when: vbr_license | bool
  register: win_package_vbr_server
- name: Install VBR Server without license
  ansible.windows.win_package:
    path: "{{ vbr_source }}Backup\\Server.x64.msi"
    state: present
    arguments: "VBR_SQLSERVER_AUTHENTICATION=1 VBR_SQLSERVER_SERVER={{ sql_instance }} VBR_SQLSERVER_USERNAME=sa VBR_SQLSERVER_PASSWORD={{ sql_sapassword }} ACCEPT_THIRDPARTY_LICENSES=1 ACCEPTEULA=YES"
  when: not vbr_license | bool
  register: win_package_vbr_server
- name: Install VBR Console
  ansible.windows.win_package:
    path: "{{ vbr_source }}Backup\\Shell.x64.msi"
    state: present
    arguments:
        - 'ACCEPTEULA=YES'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
  register: win_package_vbr_console
- name: Install VBR Explorer for ActiveDirectory
  ansible.windows.win_package:
    path: "{{ vbr_source }}Explorers\\VeeamExplorerForActiveDirectory.msi"
    state: present
    arguments:
        - 'ACCEPT_EULA=1'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
- name: Install VBR Explorer for Exchange
  ansible.windows.win_package:
    path: "{{ vbr_source }}Explorers\\VeeamExplorerForExchange.msi"
    state: present
    arguments:
        - 'ACCEPT_EULA=1'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
- name: Install VBR Explorer for Oracle
  ansible.windows.win_package:
    path: "{{ vbr_source }}Explorers\\VeeamExplorerForOracle.msi"
    state: present
    arguments:
        - 'ACCEPT_EULA=1'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
- name: Install VBR Explorer for SharePoint
  ansible.windows.win_package:
    path: "{{ vbr_source }}Explorers\\VeeamExplorerForSharePoint.msi"
    state: present
    arguments:
        - 'ACCEPT_EULA=1'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
- name: Install VBR Explorer for SQL
  ansible.windows.win_package:
    path: "{{ vbr_source }}Explorers\\VeeamExplorerForSQL.msi"
    state: present
    arguments:
        - 'ACCEPT_EULA=1'
        - 'ACCEPT_THIRDPARTY_LICENSES=1'
